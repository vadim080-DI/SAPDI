{
    "properties": {},
    "description": "Data Access Test (CS)",
    "processes": {
        "python2operator1": {
            "component": "com.sap.system.python2Operator",
            "metadata": {
                "label": "Python2Operator",
                "x": 479,
                "y": 170,
                "height": 80,
                "width": 120,
                "extensible": true,
                "config": {
                    "script": "import hashlib\nimport json\nimport textblob\n\ndef force_unicode(m):\n    try:\n        return unicode(m)\n    except UnicodeDecodeError:\n        ascii = str(m).encode('string_escape')\n        return unicode(ascii)\n\ndef parse_review_body(txt):\n    \"\"\"\n    Parse reviews provided by textual body (one review per line).\n    \"\"\"\n    lines = txt.split(\"\\n\")\n    records = []\n    for line in lines:\n        # forcefully handle encoding issues\n        line = force_unicode(line.strip())\n        if line == \"\": continue\n        records.append(parse_review(line))\n    jsonout = json.dumps(records)\n    return jsonout\n\ndef parse_review(line):\n    \"\"\"\n    Parses a review of format: <PRODUCT-ID> Review: <REVIEW-TEXT>.\n    Extracts the following attributes and textual features:\n    \n    Extracts product ID (ID), text length (LENGTH), text (TXT), sentiment polarity (POLARITY), and\n    sentiment subjectivity (SUBJECTIVITY). Returns information as a dictinary.\n    \"\"\"\n    try:\n        md5 = hashlib.md5(line).hexdigest()\n        rid, text = line.split(\": \", 1)\n        tb = textblob.TextBlob(text)\n        return { \"ID\": rid[:7],\n                 \"MD5\": md5,\n                 \"LENGTH\": len(text), \n                 \"TXT\": force_unicode(line),\n                 \"POLARITY\": tb.polarity,\n                 \"SUBJECTIVITY\": tb.subjectivity }\n    except ValueError, e:\n        raise ValueError(\"Line does not match expceted format \\\"<PRODUCT-ID> Review: <REVIEW-TEXT>\\\"; LINE: \\\"%s\\\"; ERROR: %s\" % (line, str(e)))\n    except Exception, e:\n        # just forward\n        raise e\n\n\ndef on_input(msg):\n    commit_token = 0\n    if msg.attributes[\"storage.endOfSequence\"]:\n        commit_token = 1\n        \n    parsed_as_json = parse_review_body(msg.body)\n            \n    api.send(\"output\", api.Message(parsed_as_json, {\"message.commit.token\": commit_token}))\n\napi.set_port_callback(\"input\", on_input)"
                },
                "additionalinports": [
                    {
                        "name": "input",
                        "type": "message"
                    }
                ],
                "additionaloutports": [
                    {
                        "name": "output",
                        "type": "message"
                    }
                ]
            }
        },
        "readfile1": {
            "component": "com.sap.storage.read",
            "metadata": {
                "label": "Read File",
                "x": 159,
                "y": 118,
                "height": 80,
                "width": 120,
                "config": {
                    "service": "webhdfs",
                    "hadoopConnection": {
                        "connectionProperties": {
                            "host": "127.0.0.1",
                            "port": "9000",
                            "user": "hdfs"
                        },
                        "configurationType": "Configuration Manager",
                        "connectionID": "HDFS"
                    },
                    "path": "/DAT263/reviews/",
                    "pattern": ".*txt",
                    "pollPeriodInMs": "10000",
                    "awsConnection": {
                        "connectionProperties": {
                            "accessKey": "AWSAccessKeyId",
                            "awsProxy": "",
                            "endpoint": "",
                            "protocol": "HTTPS",
                            "region": "eu-central-1",
                            "rootPath": "",
                            "secretKey": ""
                        },
                        "configurationType": "Configuration Manager",
                        "connectionID": "S3"
                    },
                    "awsBucket": "bucket1",
                    "recursive": true,
                    "onlyReadOnChange": true,
                    "webhdfsConnection": {
                        "connectionProperties": {
                            "host": "localhost",
                            "port": "50070",
                            "protocol": "webhdfs",
                            "rootPath": "",
                            "user": ""
                        },
                        "configurationType": "Configuration Manager",
                        "connectionID": "WEBHDFS"
                    }
                }
            }
        },
        "wiretap1": {
            "component": "com.sap.util.wiretap",
            "metadata": {
                "label": "Wiretap",
                "x": 325,
                "y": 73,
                "height": 80,
                "width": 120,
                "ui": "dynpath",
                "config": {}
            }
        },
        "wiretap2": {
            "component": "com.sap.util.wiretap",
            "metadata": {
                "label": "Wiretap",
                "x": 325,
                "y": 170,
                "height": 80,
                "width": 120,
                "ui": "dynpath",
                "config": {}
            }
        },
        "voraavroingestor1": {
            "component": "com.sap.vora.avroingestor",
            "metadata": {
                "label": "Vora Avro Ingestor",
                "x": 813,
                "y": 170,
                "height": 80,
                "width": 120,
                "config": {
                    "defaultAvroSchema": "{    \"type\": \"record\",   \"namespace\": \"\",   \"name\": \"REVIEW_STATS\",   \"fields\": [      { \"name\": \"ID\", \"type\": \"string\", \"maxLength\": 7 },     { \"name\": \"MD5\", \"type\": \"string\", \"maxLength\": 32, \"primaryKey\": true },     { \"name\": \"LENGTH\", \"type\": \"int\" },     {\"name\": \"TXT\", \"type\": \"string\", \"maxLength\": 1024 },     { \"name\": \"POLARITY\", \"type\": \"float\" },     {\"name\": \"SUBJECTIVITY\", \"type\": \"float\" }   ] }",
                    "dsn": "v2://localhost:50000/?binary=true",
                    "connectionType": "connection",
                    "connection": {
                        "configurationType": "Configuration Manager",
                        "connectionID": "VORA_EXT",
                        "connectionProperties": {}
                    },
                    "ingestionMode": "UPSERT",
                    "format": "json",
                    "varLimit": ""
                }
            }
        },
        "wiretap3": {
            "component": "com.sap.util.wiretap",
            "metadata": {
                "label": "Wiretap",
                "x": 652,
                "y": 170,
                "height": 80,
                "width": 120,
                "ui": "dynpath",
                "config": {}
            }
        },
        "wiretap4": {
            "component": "com.sap.util.wiretap",
            "metadata": {
                "label": "Wiretap",
                "x": 992,
                "y": 170,
                "height": 80,
                "width": 120,
                "ui": "dynpath",
                "config": {}
            }
        },
        "python2operator2": {
            "component": "com.sap.system.python2Operator",
            "metadata": {
                "label": "Python2Operator",
                "x": 874,
                "y": 321,
                "height": 80,
                "width": 120,
                "extensible": true,
                "config": {
                    "script": "\ndef on_input(msg):\n    if msg.attributes[\"message.commit.token\"] == 1:\n        api.send(\"output\", \"STOP\")\napi.set_port_callback(\"input\", on_input)"
                },
                "additionalinports": [
                    {
                        "name": "input",
                        "type": "message"
                    }
                ],
                "additionaloutports": [
                    {
                        "name": "output",
                        "type": "string"
                    }
                ]
            }
        },
        "wiretap5": {
            "component": "com.sap.util.wiretap",
            "metadata": {
                "label": "Wiretap",
                "x": 1025,
                "y": 321,
                "height": 80,
                "width": 120,
                "ui": "dynpath",
                "config": {}
            }
        },
        "graphterminator1": {
            "component": "com.sap.util.graphTerminator",
            "metadata": {
                "label": "Graph Terminator",
                "x": 1193,
                "y": 321,
                "height": 80,
                "width": 120,
                "config": {}
            }
        }
    },
    "groups": [
        {
            "name": "group1",
            "nodes": [
                "python2operator1"
            ],
            "metadata": {
                "description": "Group"
            },
            "tags": {
                "textblob": "0.12.0"
            }
        }
    ],
    "connections": [
        {
            "metadata": {
                "points": "283,149 301.5,149 301.5,113 320,113"
            },
            "src": {
                "port": "outFilename",
                "process": "readfile1"
            },
            "tgt": {
                "port": "in",
                "process": "wiretap1"
            }
        },
        {
            "metadata": {
                "points": "283,167 301.5,167 301.5,210 320,210"
            },
            "src": {
                "port": "outFile",
                "process": "readfile1"
            },
            "tgt": {
                "port": "in",
                "process": "wiretap2"
            }
        },
        {
            "metadata": {
                "points": "449,210 474,210"
            },
            "src": {
                "port": "out",
                "process": "wiretap2"
            },
            "tgt": {
                "port": "input",
                "process": "python2operator1"
            }
        },
        {
            "metadata": {
                "points": "603,210 647,210"
            },
            "src": {
                "port": "output",
                "process": "python2operator1"
            },
            "tgt": {
                "port": "in",
                "process": "wiretap3"
            }
        },
        {
            "metadata": {
                "points": "776,210 808,210"
            },
            "src": {
                "port": "out",
                "process": "wiretap3"
            },
            "tgt": {
                "port": "in",
                "process": "voraavroingestor1"
            }
        },
        {
            "metadata": {
                "points": "937,210 987,210"
            },
            "src": {
                "port": "out",
                "process": "voraavroingestor1"
            },
            "tgt": {
                "port": "in",
                "process": "wiretap4"
            }
        },
        {
            "metadata": {
                "points": "1116,210 1166,210 1166,285.5 819,285.5 819,361 869,361"
            },
            "src": {
                "port": "out",
                "process": "wiretap4"
            },
            "tgt": {
                "port": "input",
                "process": "python2operator2"
            }
        },
        {
            "metadata": {
                "points": "998,361 1020,361"
            },
            "src": {
                "port": "output",
                "process": "python2operator2"
            },
            "tgt": {
                "port": "in",
                "process": "wiretap5"
            }
        },
        {
            "metadata": {
                "points": "1149,361 1188,361"
            },
            "src": {
                "port": "out",
                "process": "wiretap5"
            },
            "tgt": {
                "port": "stop",
                "process": "graphterminator1"
            }
        }
    ],
    "inports": {},
    "outports": {}
}